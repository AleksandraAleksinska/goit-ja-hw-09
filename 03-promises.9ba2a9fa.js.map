{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SACpCF,EAAKG,iBAAiB,SAAUC,GAEfJ,EAAKK,SAASC,MAAMC,MAArC,IACIC,EAAOR,EAAKK,SAASI,KAAKF,MAC9BG,QAAQC,IAAIH,GACCR,EAAKK,SAASO,OAAOL,MAMlC,SAASH,EAAcS,EAAUC,GAE7B,OAAO,IAAIC,SAAS,CAACC,EAASC,KAE5BC,YAAW,KAEaC,KAAKC,SAAW,GAIpCJ,EAAQ,uBAAqBH,QAAiBC,OAGhDG,EAAO,sBAAoBJ,QAAiBC,MAAU,GAEvDA,EAAM,G,CAlBbJ,QAAQC,IAFM,KA4BdP,EAzBIiB,UAHU,KA6BXC,MAAK,EAAGC,SAAAC,EAAUlB,MAAAmB,MACjBf,QAAQC,IAAI,uBAAqBa,QAAiBC,MAAU,IAE7DC,OAAM,EAAGH,SAAAI,EAAUrB,MAAAsB,MAClBlB,QAAQC,IAAI,sBAAoBgB,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nform.addEventListener('submit', createPromise);\n\nlet firstDelay = form.elements.delay.value;\nlet step = form.elements.step.value;\nconsole.log(step);\nlet amount = form.elements.amount.value;\nconst delay = 6000;\n\nconsole.log(delay);\nlet position;\n\nfunction createPromise(position, delay) {\n  \n    return new Promise ((resolve, reject) => {\n      \n      setTimeout(() => {\n\n        const shouldResolve = Math.random() > 0.3;\n        \n        if (shouldResolve) {\n        // Fulfill\n          resolve(`✅ Fulfilled promise ${position} in ${delay}ms`)  \n      } else {\n        // Reject\n        reject(`❌ Rejected promise ${position} in ${delay}ms`)\n      }\n    }, delay)\n  \n \n}) \n};\n\n\n\ncreatePromise(position, delay)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","addEventListener","$47d4ff9957288465$var$createPromise","elements","delay","value","$47d4ff9957288465$var$step","step","console","log","amount","position1","delay1","Promise","resolve","reject","setTimeout","Math","random","$47d4ff9957288465$var$position","then","position","position2","delay2","catch","position3","delay3"],"version":3,"file":"03-promises.9ba2a9fa.js.map"}