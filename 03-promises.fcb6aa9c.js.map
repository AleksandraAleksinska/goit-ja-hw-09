{"mappings":"AAAaA,SAASC,cAAc,SAC/BC,iBAAiB,UAGtB,SAAqBC,GACnBA,EAAMC,iBAEN,IAAKC,UAAYC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,IAAYN,EAAMO,cAEhD,MAAMC,EAAaJ,EAAMK,MACnBC,EAAYL,EAAKI,MACjBE,EAAmBL,EAAOG,MAEhC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAkBC,IAAM,CAE3C,IAAIC,EAAWD,EACf,MAAME,EAAQC,OAAOP,GAAcE,GAAaE,EAAE,GAElD,SAASI,EAAcC,EAAUd,GAC/B,MAAMe,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAS,CAACC,EAASC,KAE5BC,YAAW,KACLN,EAEFI,EAAQ,C,SAACL,E,MAAUd,IAGnBoB,EAAO,C,SAACN,E,MAAUd,GAAO,GAG1BA,EAAM,G,CAMba,EAAcH,EAAUC,GACvBW,MAAK,EAACR,SAAEA,EAAQd,MAAEA,MACjBuB,QAAQC,IAAI,uBAAqBV,QAAiBd,MAAU,IAE7DyB,OAAM,EAACX,SAAEA,EAAQd,MAAEA,MAClBuB,QAAQC,IAAI,sBAAoBV,QAAed,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nform.addEventListener('submit', submitForm);\n\n\nfunction submitForm (event) {\n  event.preventDefault();\n\n  let {elements: { delay, step, amount }} = event.currentTarget;  \n\n  const firstDelay = delay.value;\n  const delayStep = step.value;\n  const numberOfPromises = amount.value;\n\n  for (let i = 1; i <= numberOfPromises; i ++) {\n\n    let position = i;\n    const delay = Number(firstDelay) + delayStep * (i-1);\n        \n    function createPromise(position, delay) {\n      const shouldResolve = Math.random() > 0.3;\n      return new Promise ((resolve, reject) => {\n\n        setTimeout(() => {\n          if (shouldResolve) {\n            // Fulfill\n            resolve({position, delay});\n          } else {\n            // Reject\n            reject({position, delay});\n          }\n\n        }, delay)\n      \n      })\n      \n    }\n\n    createPromise(position, delay)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  }\n  \n    \n  \n\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["document","querySelector","addEventListener","event","preventDefault","elements","delay","delay2","step","amount","currentTarget","firstDelay","value","delayStep","numberOfPromises","i","position1","delay1","Number","createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","console","log","catch"],"version":3,"file":"03-promises.fcb6aa9c.js.map"}